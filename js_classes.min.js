/**
 * Michael Crowe (crowebird - www.crowebird.com) - 2013
 * https://github.com/crowebird/js_classes
 */
(function(e){"use strict";e.js_classes=function(){};var t=function(){if(arguments.length>3||arguments.length==0)throw"Invalid class declaration, invalid number of arguments";var n=arguments[0];if(typeof n!="string"||!/^[$_A-Z][$_A-Z0-9]*?(?:[\.][$_A-Z][$_A-Z0-9]*?)*?$/i.test(n))throw"Invalid class name, must be a string that represents a valid variable name that will be used as the class name";var r=n.split(/\./),i=arguments[1];if(typeof i!="function")throw"Invalid class function, a js_classes class can only be created by wrapping a function";var s=e;for(var o=0;o<r.length;++o){if(!s[r[o]])break;if(o==r.length-1){if(s[r[o]]&&s[r[o]].js_classes&&s[r[o]].js_classes.IDENT==js_classes.IDENT)throw"Cannot redeclare class "+n}else s=s[r[o]]}var u=this,a=!1;i.name=="abstract"&&(a=!0);var f=function(t){if(t!==js_classes.PREVENTCONSTRUCT&&a)throw"You cannot create an instance of abstract class "+n;var r=[],s={},o=new i,f=null;if(u!==e.js_classes){f=new u(js_classes.PREVENTCONSTRUCT);for(var l in f)f.hasOwnProperty(l)&&(s[l]=function(e){return e}(f[l]),o[l]?(o[l]=function(e,t,r){if(typeof t!=typeof r)throw"Class "+n+" cannot override "+e+" of type "+typeof r+" with type "+typeof t;if(typeof t=="function"&&r.abstract&&r.definedArguments!=t.length)throw"Declaration of "+n+"::"+l+" must be compatible with "+r.className+"::"+e;return t}(l,o[l],f[l]),f[l]=o[l]):o[l]=function(e,t){return t.abstract&&r.push(e),t}(l,f[l]))}for(var l in o)o.hasOwnProperty(l)&&typeof o[l]=="function"&&(f==null||f!=null&&!f[l])&&(o[l]=function(e,t){if(t.name=="abstract"){r.push(e);var i=String(t);i=i.replace(/(?:\/\*(?:[\s\S]*?)\*\/)|(?:[\s;]+\/\/(?:.*)$)/gm,"");if(!/^function abstract\(.*?\)\s*?{\s*?\}/m.test(String(i)))throw"Abstract function "+n+"::"+l+" cannot contain a body"}return t.abstract=t.name=="abstract",t.definedArguments=t.length,t.className=n,t}(l,o[l]));f&&(o._super=s);if(!a&&r.length>0)throw"Class "+n+" contains "+r.length+" abstract method"+(r.length==1?"":"s")+" and must be declared abstract or have those methods implemented ("+r.reverse().toString()+")";var c=this;return o._instanceOf=function(e){return e===js_classes||c instanceof e||f&&f._instanceOf&&f._instanceOf(e)?!0:!1},o._construct&&t!==js_classes.PREVENTCONSTRUCT&&(o._construct.apply(null,arguments),delete o._construct),o};s=e;for(o=0;o<r.length;++o){s[r[o]]||(s[r[o]]={});if(o==r.length-1){for(var l in s[r[o]])s[r[o]].hasOwnProperty(l)&&(f[l]=s[r[o]][l]);s[r[o]]=f}else s=s[r[o]]}return f.extend=t,f.js_classes={CREATED:new Date,IDENT:js_classes.IDENT},js_classes};js_classes.extend=t,js_classes.PREVENTCONSTRUCT="ED7352BC-BDDD-45BA-B0B5-3577A355665A-05A4367A-7CD1-4B54-91B0-F2DA44D4871A",js_classes.IDENT="6931988F-786C-48A0-8A45-7C2D8A05A766DEAC069B-C752-4669-B956-E6D24DF3B87A"})(window)
