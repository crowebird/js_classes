/**
 * Michael Crowe (crowebird - www.crowebird.com) - 2013
 * https://github.com/crowebird/js_classes
 */
(function(){var e=this;e.js_classes=function(){};var t=function(){if(arguments.length>3||arguments.length==0)throw{name:"Error",message:"Invalid class declaration, invalid number of arguments"};var n=arguments[0];if(typeof n!="string"||!/^[$_A-Z][$_A-Z0-9]*$/i.test(n))throw{name:"Error",message:"Invalid class name, must be a string that represents a valid variable name that will be used as the class name"};var r=arguments[arguments.length==3?2:1];if(typeof r!="function")throw{name:"Error",message:"Invalid class function, a js_classes class can only be created by wrapping a function"};var i=arguments.length==3?arguments[1]:{};if(typeof i!="object")throw{name:"Error",message:"Invalid class definition, expecting an Object"};var s=this,o=function(t){if(t!==js_classes.PREVENTCONSTRUCT&&i.abstract)throw{name:"Error",message:"You cannot create an instance of abstract class "+n};var o=[],u=new r,a=null;if(s!==e.js_classes){a=new s(js_classes.PREVENTCONSTRUCT);for(var f in a)a.hasOwnProperty(f)&&(u[f]?u[f]=function(e,t,r,i){if(typeof t!=typeof r)throw{name:"Error",message:"Class "+n+" cannot override "+e+" of type "+typeof r+" with type "+typeof t};if(typeof t=="function"){if(r.abstract&&r.definedArguments!=t.length)throw{name:"Error",message:"Declaration of "+n+"::"+f+" must be compatible with "+r.className+"::"+e};return function(){return t.apply({_super:i},arguments)}}return t}(f,u[f],a[f],a):u[f]=function(e,t){return t.abstract&&o.push(e),t}(f,a[f]))}for(var f in u)u.hasOwnProperty(f)&&typeof u[f]=="function"&&(a==null||a!=null&&!a[f])&&(u[f]=function(e,t,r){if(t.name=="abstract"){o.push(e);var i=String(t);i=i.replace(/(?:\/\*(?:[\s\S]*?)\*\/)|(?:[\s;]+\/\/(?:.*)$)/gm,"");if(!/^function abstract\(.*?\)\s*?{\s*?\}/m.test(String(i)))throw{name:"Error",message:"Abstract function "+n+"::"+f+" cannot contain a body"}}var s=function(){return t.apply(a?{_super:r}:null,arguments)};return s.abstract=t.name=="abstract",s.definedArguments=t.length,s.className=n,s}(f,u[f],a));if(!i.abstract&&o.length>0)throw{name:"Error",message:"Class "+n+" contains "+o.length+" abstract method"+(o.length==1?"":"s")+" and must be declared abstract or have those methods implemented ("+o.reverse().toString()+")"};var l=this;return u._instanceOf=function(e){return e===js_classes||l instanceof e||a&&a._instanceOf&&a._instanceOf(e)?!0:!1},u._construct&&t!==js_classes.PREVENTCONSTRUCT&&(u._construct.apply(null,arguments),delete u._construct),u};o.extend=t;var u=n.split(/\./),a=e;for(var f=0;f<u.length;++f)a[u[f]]||(a[u[f]]={}),f==u.length-1?a[u[f]]=o:a=a[u[f]]};js_classes.extend=t,js_classes.PREVENTCONSTRUCT="ED7352BC-BDDD-45BA-B0B5-3577A355665A-05A4367A-7CD1-4B54-91B0-F2DA44D4871A"})()
